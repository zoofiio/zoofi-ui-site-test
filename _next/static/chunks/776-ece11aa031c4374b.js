(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[776],{28070:function(t){var e,n,o,r=t.exports={};function defaultSetTimout(){throw Error("setTimeout has not been defined")}function defaultClearTimeout(){throw Error("clearTimeout has not been defined")}function runTimeout(t){if(e===setTimeout)return setTimeout(t,0);if((e===defaultSetTimout||!e)&&setTimeout)return e=setTimeout,setTimeout(t,0);try{return e(t,0)}catch(n){try{return e.call(null,t,0)}catch(n){return e.call(this,t,0)}}}!function(){try{e="function"==typeof setTimeout?setTimeout:defaultSetTimout}catch(t){e=defaultSetTimout}try{n="function"==typeof clearTimeout?clearTimeout:defaultClearTimeout}catch(t){n=defaultClearTimeout}}();var i=[],a=!1,s=-1;function cleanUpNextTick(){a&&o&&(a=!1,o.length?i=o.concat(i):s=-1,i.length&&drainQueue())}function drainQueue(){if(!a){var t=runTimeout(cleanUpNextTick);a=!0;for(var e=i.length;e;){for(o=i,i=[];++s<e;)o&&o[s].run();s=-1,e=i.length}o=null,a=!1,function(t){if(n===clearTimeout)return clearTimeout(t);if((n===defaultClearTimeout||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(t);try{n(t)}catch(e){try{return n.call(null,t)}catch(e){return n.call(this,t)}}}(t)}}function Item(t,e){this.fun=t,this.array=e}function noop(){}r.nextTick=function(t){var e=Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];i.push(new Item(t,e)),1!==i.length||a||runTimeout(drainQueue)},Item.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=noop,r.addListener=noop,r.once=noop,r.off=noop,r.removeListener=noop,r.removeAllListeners=noop,r.emit=noop,r.prependListener=noop,r.prependOnceListener=noop,r.listeners=function(t){return[]},r.binding=function(t){throw Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(t){throw Error("process.chdir is not supported")},r.umask=function(){return 0}},43794:function(t,e,n){"use strict";n.d(e,{mW:function(){return devtools}});let o=new Map,getTrackedConnectionState=t=>{let e=o.get(t);return e?Object.fromEntries(Object.entries(e.stores).map(([t,e])=>[t,e.getState()])):{}},extractConnectionInformation=(t,e,n)=>{if(void 0===t)return{type:"untracked",connection:e.connect(n)};let r=o.get(n.name);if(r)return{type:"tracked",store:t,...r};let i={connection:e.connect(n),stores:{}};return o.set(n.name,i),{type:"tracked",store:t,...i}},devtools=(t,e={})=>(n,o,r)=>{let i;let{enabled:a,anonymousActionType:s,store:u,...l}=e;try{i=(null==a||a)&&window.__REDUX_DEVTOOLS_EXTENSION__}catch(t){}if(!i)return a&&console.warn("[zustand devtools middleware] Please install/enable Redux devtools extension"),t(n,o,r);let{connection:c,...d}=extractConnectionInformation(u,i,l),f=!0;r.setState=(t,e,i)=>{let a=n(t,e);if(!f)return a;let d=void 0===i?{type:s||"anonymous"}:"string"==typeof i?{type:i}:i;return void 0===u?null==c||c.send(d,o()):null==c||c.send({...d,type:`${u}/${d.type}`},{...getTrackedConnectionState(l.name),[u]:r.getState()}),a};let setStateFromDevtools=(...t)=>{let e=f;f=!1,n(...t),f=e},p=t(r.setState,o,r);if("untracked"===d.type?null==c||c.init(p):(d.stores[d.store]=r,null==c||c.init(Object.fromEntries(Object.entries(d.stores).map(([t,e])=>[t,t===d.store?p:e.getState()])))),r.dispatchFromDevtools&&"function"==typeof r.dispatch){let t=!1,e=r.dispatch;r.dispatch=(...n)=>{"__setState"!==n[0].type||t||(console.warn('[zustand devtools middleware] "__setState" action type is reserved to set state from the devtools. Avoid using it.'),t=!0),e(...n)}}return c.subscribe(t=>{var e;switch(t.type){case"ACTION":if("string"!=typeof t.payload){console.error("[zustand devtools middleware] Unsupported action format");return}return parseJsonThen(t.payload,t=>{if("__setState"===t.type){if(void 0===u){setStateFromDevtools(t.state);return}1!==Object.keys(t.state).length&&console.error(`
                    [zustand devtools middleware] Unsupported __setState action format. 
                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),
                    and value of this only key should be a state object. Example: { "type": "__setState", "state": { "abc123Store": { "foo": "bar" } } }
                    `);let e=t.state[u];if(null==e)return;JSON.stringify(r.getState())!==JSON.stringify(e)&&setStateFromDevtools(e);return}r.dispatchFromDevtools&&"function"==typeof r.dispatch&&r.dispatch(t)});case"DISPATCH":switch(t.payload.type){case"RESET":if(setStateFromDevtools(p),void 0===u)return null==c?void 0:c.init(r.getState());return null==c?void 0:c.init(getTrackedConnectionState(l.name));case"COMMIT":if(void 0===u){null==c||c.init(r.getState());break}return null==c?void 0:c.init(getTrackedConnectionState(l.name));case"ROLLBACK":return parseJsonThen(t.state,t=>{if(void 0===u){setStateFromDevtools(t),null==c||c.init(r.getState());return}setStateFromDevtools(t[u]),null==c||c.init(getTrackedConnectionState(l.name))});case"JUMP_TO_STATE":case"JUMP_TO_ACTION":return parseJsonThen(t.state,t=>{if(void 0===u){setStateFromDevtools(t);return}JSON.stringify(r.getState())!==JSON.stringify(t[u])&&setStateFromDevtools(t[u])});case"IMPORT_STATE":{let{nextLiftedState:n}=t.payload,o=null==(e=n.computedStates.slice(-1)[0])?void 0:e.state;if(!o)return;void 0===u?setStateFromDevtools(o):setStateFromDevtools(o[u]),null==c||c.send(null,n);break}case"PAUSE_RECORDING":return f=!f}return}}),p},parseJsonThen=(t,e)=>{let n;try{n=JSON.parse(t)}catch(t){console.error("[zustand devtools middleware] Could not parse the received json",t)}void 0!==n&&e(n)}}}]);